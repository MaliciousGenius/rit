Terminals which are not used

   MINUS
   DIVIDE
   FOR
   NEWLINE


Grammar

    0 $accept: program $end

    1 program: block

    2 block: LEFTBRACE statements RIGHTBRACE

    3 statements: statement
    4           | statement SEMI statements

    5 statement: ifstmt
    6          | asgnstmt
    7          | sum
    8          | /* empty */

    9 asgnstmt: VARIABLE ASGN sum

   10 ifstmt: IF condition THEN block ELSE block

   11 condition: sum LT sum
   12          | sum GT sum
   13          | sum LE sum
   14          | sum GE sum
   15          | sum EQ sum
   16          | sum NE sum

   17 sum: primary
   18    | sum PLUS primary
   19    | sum TIMES primary

   20 primary: NUMBER
   21        | VARIABLE
   22        | LEFTPAREN sum RIGHTPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
PLUS (258) 18
MINUS (259)
TIMES (260) 19
DIVIDE (261)
LEFTPAREN (262) 22
RIGHTPAREN (263) 22
LEFTBRACE (264) 2
RIGHTBRACE (265) 2
IF (266) 10
THEN (267) 10
ELSE (268) 10
FOR (269)
SEMI (270) 4
NEWLINE (271)
ASGN (272) 9
LT (273) 11
GT (274) 12
LE (275) 13
GE (276) 14
EQ (277) 15
NE (278) 16
VARIABLE (279) 9 21
NUMBER (280) 20


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
program (27)
    on left: 1, on right: 0
block (28)
    on left: 2, on right: 1 10
statements (29)
    on left: 3 4, on right: 2 4
statement (30)
    on left: 5 6 7 8, on right: 3 4
asgnstmt (31)
    on left: 9, on right: 6
ifstmt (32)
    on left: 10, on right: 5
condition (33)
    on left: 11 12 13 14 15 16, on right: 10
sum (34)
    on left: 17 18 19, on right: 7 9 11 12 13 14 15 16 18 19 22
primary (35)
    on left: 20 21 22, on right: 17 18 19


state 0

    0 $accept: . program $end

    LEFTBRACE  shift, and go to state 1

    program  go to state 2
    block    go to state 3


state 1

    2 block: LEFTBRACE . statements RIGHTBRACE

    LEFTPAREN  shift, and go to state 4
    IF         shift, and go to state 5
    VARIABLE   shift, and go to state 6
    NUMBER     shift, and go to state 7

    $default  reduce using rule 8 (statement)

    statements  go to state 8
    statement   go to state 9
    asgnstmt    go to state 10
    ifstmt      go to state 11
    sum         go to state 12
    primary     go to state 13


state 2

    0 $accept: program . $end

    $end  shift, and go to state 14


state 3

    1 program: block .

    $default  reduce using rule 1 (program)


state 4

   22 primary: LEFTPAREN . sum RIGHTPAREN

    LEFTPAREN  shift, and go to state 4
    VARIABLE   shift, and go to state 15
    NUMBER     shift, and go to state 7

    sum      go to state 16
    primary  go to state 13


state 5

   10 ifstmt: IF . condition THEN block ELSE block

    LEFTPAREN  shift, and go to state 4
    VARIABLE   shift, and go to state 15
    NUMBER     shift, and go to state 7

    condition  go to state 17
    sum        go to state 18
    primary    go to state 13


state 6

    9 asgnstmt: VARIABLE . ASGN sum
   21 primary: VARIABLE .

    ASGN  shift, and go to state 19

    $default  reduce using rule 21 (primary)


state 7

   20 primary: NUMBER .

    $default  reduce using rule 20 (primary)


state 8

    2 block: LEFTBRACE statements . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 20


state 9

    3 statements: statement .
    4           | statement . SEMI statements

    SEMI  shift, and go to state 21

    $default  reduce using rule 3 (statements)


state 10

    6 statement: asgnstmt .

    $default  reduce using rule 6 (statement)


state 11

    5 statement: ifstmt .

    $default  reduce using rule 5 (statement)


state 12

    7 statement: sum .
   18 sum: sum . PLUS primary
   19    | sum . TIMES primary

    PLUS   shift, and go to state 22
    TIMES  shift, and go to state 23

    $default  reduce using rule 7 (statement)


state 13

   17 sum: primary .

    $default  reduce using rule 17 (sum)


state 14

    0 $accept: program $end .

    $default  accept


state 15

   21 primary: VARIABLE .

    $default  reduce using rule 21 (primary)


state 16

   18 sum: sum . PLUS primary
   19    | sum . TIMES primary
   22 primary: LEFTPAREN sum . RIGHTPAREN

    PLUS        shift, and go to state 22
    TIMES       shift, and go to state 23
    RIGHTPAREN  shift, and go to state 24


state 17

   10 ifstmt: IF condition . THEN block ELSE block

    THEN  shift, and go to state 25


state 18

   11 condition: sum . LT sum
   12          | sum . GT sum
   13          | sum . LE sum
   14          | sum . GE sum
   15          | sum . EQ sum
   16          | sum . NE sum
   18 sum: sum . PLUS primary
   19    | sum . TIMES primary

    PLUS   shift, and go to state 22
    TIMES  shift, and go to state 23
    LT     shift, and go to state 26
    GT     shift, and go to state 27
    LE     shift, and go to state 28
    GE     shift, and go to state 29
    EQ     shift, and go to state 30
    NE     shift, and go to state 31


state 19

    9 asgnstmt: VARIABLE ASGN . sum

    LEFTPAREN  shift, and go to state 4
    VARIABLE   shift, and go to state 15
    NUMBER     shift, and go to state 7

    sum      go to state 32
    primary  go to state 13


state 20

    2 block: LEFTBRACE statements RIGHTBRACE .

    $default  reduce using rule 2 (block)


state 21

    4 statements: statement SEMI . statements

    LEFTPAREN  shift, and go to state 4
    IF         shift, and go to state 5
    VARIABLE   shift, and go to state 6
    NUMBER     shift, and go to state 7

    $default  reduce using rule 8 (statement)

    statements  go to state 33
    statement   go to state 9
    asgnstmt    go to state 10
    ifstmt      go to state 11
    sum         go to state 12
    primary     go to state 13


state 22

   18 sum: sum PLUS . primary

    LEFTPAREN  shift, and go to state 4
    VARIABLE   shift, and go to state 15
    NUMBER     shift, and go to state 7

    primary  go to state 34


state 23

   19 sum: sum TIMES . primary

    LEFTPAREN  shift, and go to state 4
    VARIABLE   shift, and go to state 15
    NUMBER     shift, and go to state 7

    primary  go to state 35


state 24

   22 primary: LEFTPAREN sum RIGHTPAREN .

    $default  reduce using rule 22 (primary)


state 25

   10 ifstmt: IF condition THEN . block ELSE block

    LEFTBRACE  shift, and go to state 1

    block  go to state 36


state 26

   11 condition: sum LT . sum

    LEFTPAREN  shift, and go to state 4
    VARIABLE   shift, and go to state 15
    NUMBER     shift, and go to state 7

    sum      go to state 37
    primary  go to state 13


state 27

   12 condition: sum GT . sum

    LEFTPAREN  shift, and go to state 4
    VARIABLE   shift, and go to state 15
    NUMBER     shift, and go to state 7

    sum      go to state 38
    primary  go to state 13


state 28

   13 condition: sum LE . sum

    LEFTPAREN  shift, and go to state 4
    VARIABLE   shift, and go to state 15
    NUMBER     shift, and go to state 7

    sum      go to state 39
    primary  go to state 13


state 29

   14 condition: sum GE . sum

    LEFTPAREN  shift, and go to state 4
    VARIABLE   shift, and go to state 15
    NUMBER     shift, and go to state 7

    sum      go to state 40
    primary  go to state 13


state 30

   15 condition: sum EQ . sum

    LEFTPAREN  shift, and go to state 4
    VARIABLE   shift, and go to state 15
    NUMBER     shift, and go to state 7

    sum      go to state 41
    primary  go to state 13


state 31

   16 condition: sum NE . sum

    LEFTPAREN  shift, and go to state 4
    VARIABLE   shift, and go to state 15
    NUMBER     shift, and go to state 7

    sum      go to state 42
    primary  go to state 13


state 32

    9 asgnstmt: VARIABLE ASGN sum .
   18 sum: sum . PLUS primary
   19    | sum . TIMES primary

    PLUS   shift, and go to state 22
    TIMES  shift, and go to state 23

    $default  reduce using rule 9 (asgnstmt)


state 33

    4 statements: statement SEMI statements .

    $default  reduce using rule 4 (statements)


state 34

   18 sum: sum PLUS primary .

    $default  reduce using rule 18 (sum)


state 35

   19 sum: sum TIMES primary .

    $default  reduce using rule 19 (sum)


state 36

   10 ifstmt: IF condition THEN block . ELSE block

    ELSE  shift, and go to state 43


state 37

   11 condition: sum LT sum .
   18 sum: sum . PLUS primary
   19    | sum . TIMES primary

    PLUS   shift, and go to state 22
    TIMES  shift, and go to state 23

    $default  reduce using rule 11 (condition)


state 38

   12 condition: sum GT sum .
   18 sum: sum . PLUS primary
   19    | sum . TIMES primary

    PLUS   shift, and go to state 22
    TIMES  shift, and go to state 23

    $default  reduce using rule 12 (condition)


state 39

   13 condition: sum LE sum .
   18 sum: sum . PLUS primary
   19    | sum . TIMES primary

    PLUS   shift, and go to state 22
    TIMES  shift, and go to state 23

    $default  reduce using rule 13 (condition)


state 40

   14 condition: sum GE sum .
   18 sum: sum . PLUS primary
   19    | sum . TIMES primary

    PLUS   shift, and go to state 22
    TIMES  shift, and go to state 23

    $default  reduce using rule 14 (condition)


state 41

   15 condition: sum EQ sum .
   18 sum: sum . PLUS primary
   19    | sum . TIMES primary

    PLUS   shift, and go to state 22
    TIMES  shift, and go to state 23

    $default  reduce using rule 15 (condition)


state 42

   16 condition: sum NE sum .
   18 sum: sum . PLUS primary
   19    | sum . TIMES primary

    PLUS   shift, and go to state 22
    TIMES  shift, and go to state 23

    $default  reduce using rule 16 (condition)


state 43

   10 ifstmt: IF condition THEN block ELSE . block

    LEFTBRACE  shift, and go to state 1

    block  go to state 44


state 44

   10 ifstmt: IF condition THEN block ELSE block .

    $default  reduce using rule 10 (ifstmt)
